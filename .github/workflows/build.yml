name: Build and Release Electron App

on:
  push:
    branches: [master]
    paths: ['**']
  pull_request:
    branches: [master]
    paths: ['**']

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      tag: v1.0.${{ github.run_number }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Rebuild native modules for Electron
        run: npx electron-rebuild

      - name: Build Electron app
        run: npm run build && npm run dist

      - name: Create and push tag
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: |
          TAG=v1.0.${{ github.run_number }}
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git tag $TAG
          git push origin $TAG
        # export tag name for downstream job
        id: tag

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: electron-market-build
          path: dist/

  release:
    needs: build
    runs-on: ubuntu-latest
    if: needs.build.outputs.tag != ''

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: electron-market-build
          path: release-files

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.build.outputs.tag }}
          name: Release ${{ needs.build.outputs.tag }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.build.outputs.tag }}
          files: |
            release-files/**/*.AppImage
            release-files/**/*.dmg
            release-files/**/*.exe
            release-files/**/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
